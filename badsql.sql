select /*QueryMore*/ /*+ ordered use_nl(t_mru) index(t_mru PKMRU) use_nl(t_spn0) use_nl(t_spn1) use_nl(cft_spn0) */
 	nest."Id",
 	nest."OwnerId",
 	nest."IsDeleted",
 	nest."Name",
 	nest."CurrencyIsoCode",
 	nest."CreatedDate",
 	nest."CreatedById",
 	nest."LastModifiedDate",
 	nest."LastModifiedById",
 	nest."SystemModstamp",
 	nest."LastActivityDate",
 	t_mru.last_view_date "LastViewedDate",
 	t_mru.entry_date "LastReferencedDate",
 	nest."Account__c",
 	nest."Active_Cluster_Id_File__c",
 	nest."Active_License_File__c",
 	nest."Cluster_Key__c",
 	nest."Cluster_License_Type__c",
 	nest."Cluster_Logical_Timestamp__c",
 	nest."Expiry_Date__c",
 	nest."License_Logical_Timestamp__c",
 	nest."Number_of_Nodes__c",
 	nest."CVM_Memory_Configured__c",
 	nest."ColAlias1",
 	nest."Current_License_Key_File__c",
 	nest."isExpired__c",
 	nest."Inst_Addr_Attention__c",
 	nest."Inst_Addr_City__c",
 	nest."Inst_Addr_Country__c",
 	nest."Inst_Addr_Line_1__c",
 	nest."Inst_Addr_Line_2__c",
 	nest."Inst_Addr_State__c",
 	nest."Inst_Addr_Zip__c",
 	nest."Installation_Address__c",
 	nest."t.ID",
 	nest."Is_Installation_Address_Set__c",
 	nest."Parts_Addr_Attention__c",
 	nest."Parts_Addr_City__c",
 	nest."Parts_Addr_Country__c",
 	nest."Parts_Addr_Line_1__c",
 	nest."Parts_Addr_Line_2__c",
 	nest."Parts_Addr_State__c",
 	nest."Parts_Addr_Zip__c",
 	nest."instaddr__c",
 	nest."Is_Support_Contact_Set__c",
 	nest."AssetExists__c",
 	nest."Last_Modified_By_Contact__c",
 	nest."ColAlias2",
 	nest."NumberOfAssets__c",
 	nest."On_Field_Engineer__c",
 	nest."Site_Specific_Information__c",
 	nest."UpdateAssetAddress__c",
 	nest."Primary_Support_Contact__c",
 	nest."AddOn_Data__c",
 	nest."Cluster_Name__c",
 	nest."Is_CCU_Cluster__c",
 	nest."LicensesDelimited__c",
 	nest."Total_CCU_s__c",
 	nest."Cluster_Capacity__c",
 	nest."isABLCluster__c",
 	nest."Cluster_Type__c",
 	nest."Break_Fix_Contact__c",
 	nest."License_Class__c",
 	nest."Contract_Status__c",
 	SUBSTR(cft_spn0.val4, 0, 1300) "Order_type__c",
 	CASE WHEN (TRANSLATE(repl__3,'X0123456789','X') IS NOT NULL) THEN NULL ELSE SUBSTR(CASE  WHEN (repl__3 IS NOT NULL AND repl__3 = '1') THEN 'Basic' WHEN (repl__3 IS NOT NULL AND repl__3 = '12') THEN 'Basic' WHEN (repl__3 IS NOT NULL AND repl__3 = '2') THEN 'Production' WHEN (repl__3 IS NOT NULL AND repl__3 = '11') THEN 'Production' WHEN (repl__3 IS NOT NULL AND repl__3 = '3') THEN 'Mission Critical' WHEN (repl__3 IS NOT NULL AND repl__3 = '4') THEN 'ASP' WHEN (1=0) THEN 'ASP' WHEN (1=0) THEN 'ASP' WHEN (1=0) THEN 'ASP' WHEN (repl__3 IS NOT NULL AND repl__3 = '9') THEN 'OEM' WHEN (repl__3 IS NOT NULL AND repl__3 = '15') THEN 'OEM' WHEN (repl__3 IS NOT NULL AND repl__3 = '10') THEN 'Mission Critical' ELSE (SELECT /*+ index(pick akpicklist_master) */ /* space for more   */ api_name FROM core.picklist_master pick WHERE organization_id = '00D60000000IUGi' AND picklist_enum_or_id = '00N0e000003GHrT' AND int_value = repl__3) END, 0, 1300) END "Support_Contract_Type__c",
 	nest."Support_End_Date__c",
 	nest."Support_Level__c",
 	nest."supportDetailsUpdated__c",
 	nest."AssetBatchExecuted__c",
 	nest."AFS_Version_Pulse__c",
 	nest."Buckets_version_Pulse__c",
 	nest."Calm_version_Pulse__c",
 	nest."Cluster_ID__c",
 	nest."Foundation_Version_Pulse__c",
 	nest."Hypervisor_Type__c",
 	nest."Hypervisor_version__c",
 	nest."Karbon_version_Pulse__c",
 	nest."LCM_Version_Pulse__c",
 	nest."Last_Pulse4k__c",
 	nest."Xray_Pulse__c",
 	nest."Last_PulseHD__c",
 	nest."Xtract_Pulse__c",
 	nest."Last_Pulse__c",
 	nest."additional_data__c",
 	nest."NCC_Version_Pulse__c",
 	nest."Nutanix_core_version__c",
 	nest."PC_Version_Pulse__c",
 	nest."Usage_Restricted_to__c",
 	nest."PC_UUID__c",
 	nest."Break_Fix_Do_Not_Remind__c",
 	nest."ColAlias3",
 	nest."Cluster_category__c",
 	nest."Number_of_Flow_Policies__c",
 	nest."Number_of_CBL_Nodes__c",
 	nest."Era_Version_Pulse__c",
 	nest."ColAlias4",
 	nest."Consumption_Model__c",
 	nest."Tenant_UUID__c",
 	nest."License_Key__c",
 	nest."Tag__c",
 	nest."Acknowledge_by__c",
 	nest."Acknowledge_date__c",
 	nest."Install_Address_Nickname__c",
 	nest."Part_Address_Nickname__c",
 	SUBSTR(CASE WHEN (CASE WHEN repl__2 = '000000000000000' THEN NULL ELSE repl__2 END IS NULL) THEN 'Free Trail' ELSE CASE WHEN (NVL(t_spn1.val24, 'Active'||'x')='Active') THEN 'Paid - Active' ELSE 'Paid - Canceled' END END, 0, 1300) "Subscription_Status__c",
 	nest."Subscription__c",
 	nest."Cloud_Provider__c",
 	nest."Cluster_list__c",
 	nest."Licensed_By_Email__c",
 	nest."Pulse_Declined_Comments__c",
 	nest."Pulse_Declined_Date__c",
 	nest."Pulse_Declined_Reason__c",
 	nest."Pulse_Declined__c",
 	nest."ASP_Account__c",
 	nest."Account_Name__c",
 	nest."Cluster_Status__c",
 	nest."Contract_Coverage__c",
 	nest."ColAlias5",
 	nest."Evaluate_Contract__c",
 	CASE WHEN (TRANSLATE(cft_spn0.val12,'X0123456789','X') IS NOT NULL) THEN NULL ELSE SUBSTR((SELECT /*+ index(pick akpicklist_master) */ /* space for more   */ api_name FROM core.picklist_master pick WHERE organization_id = '00D60000000IUGi' AND picklist_enum_or_id = '00N60000002Jcm3' AND int_value = cft_spn0.val12), 0, 1300) END "L1_L2_Tech_Support_Provider__c",
 	nest."Order_type_Text__c",
 	nest."Renewal_Requested__c",
 	nest."Request_DateTime__c",
 	nest."Requester_Email__c",
 	nest."ClusterUUID__c",
 	nest."ParseAPIJSONResponseTime__c",
 	nest."ParseAPIJSONResponse__c",
 	nest."Is_POC_Cluster__c",
 	nest."Hardware_Timeline__c",
 	nest."Insights_Remote_Collection__c",
 	nest."Backup_ASP_Association__c"
 	from (select *
 	from (select /*+ ordered use_nl(t) index(t pkcustom_entity_data) */
 	t.deleted "IsDeleted_gen_1",
 	ids.num "ids_num",
 	t.custom_entity_data_id "Id",
 	t.owner "OwnerId",
 	t.deleted "IsDeleted",
 	t.name "Name",
 	DECODE(t.currency_iso_code, '000', 'USD', t.currency_iso_code) "CurrencyIsoCode",
 	t.created_date "CreatedDate",
 	t.created_by "CreatedById",
 	t.last_update "LastModifiedDate",
 	t.last_update_by "LastModifiedById",
 	t.system_modstamp "SystemModstamp",
 	t.last_activity "LastActivityDate",
 	t.val0 "Account__c",
 	t.val1 "Active_Cluster_Id_File__c",
 	t.val2 "Active_License_File__c",
 	t.val3 "Cluster_Key__c",
 	t.val4 "Cluster_License_Type__c",
 	TO_NUMBER(t.val5) "Cluster_Logical_Timestamp__c",
 	TO_DATE(t.val6) "Expiry_Date__c",
 	TO_NUMBER(t.val7) "License_Logical_Timestamp__c",
 	TO_NUMBER(t.val8) "Number_of_Nodes__c",
 	TO_NUMBER(t.val9) "CVM_Memory_Configured__c",
 	t.val10 "ColAlias1",
 	t.val11 "Current_License_Key_File__c",
 	CASE WHEN ((TO_DATE(t.val6)<=DATE '2022-5-18') AND (NOT (TO_DATE(t.val6) IS NULL))) THEN '1' ELSE '0' END "isExpired__c",
 	t.val13 "Inst_Addr_Attention__c",
 	t.val14 "Inst_Addr_City__c",
 	t.val15 "Inst_Addr_Country__c",
 	t.val16 "Inst_Addr_Line_1__c",
 	t.val17 "Inst_Addr_Line_2__c",
 	t.val18 "Inst_Addr_State__c",
 	t.val19 "Inst_Addr_Zip__c",
 	t.val20 "Installation_Address__c",
 	t.custom_entity_data_id "t.ID",
 	t.val21 "Is_Installation_Address_Set__c",
 	t.val22 "Parts_Addr_Attention__c",
 	t.val23 "Parts_Addr_City__c",
 	t.val24 "Parts_Addr_Country__c",
 	t.val25 "Parts_Addr_Line_1__c",
 	t.val26 "Parts_Addr_Line_2__c",
 	t.val27 "Parts_Addr_State__c",
 	t.val28 "Parts_Addr_Zip__c",
 	t.val29 "instaddr__c",
 	TO_NUMBER(t.val30) "Is_Support_Contact_Set__c",
 	CASE WHEN (CASE WHEN ((NOT (TO_NUMBER(t.val34) IS NULL)) AND (TO_NUMBER(t.val34)>0)) THEN 1 ELSE 0 END) = 1 THEN '1' ELSE '0' END "AssetExists__c",
 	t.val32 "Last_Modified_By_Contact__c",
 	TO_DATE(t.val33) "ColAlias2",
 	TO_NUMBER(t.val34) "NumberOfAssets__c",
 	t.val35 "On_Field_Engineer__c",
 	t.val36 "Site_Specific_Information__c",
 	t.val37 "UpdateAssetAddress__c",
 	t.val38 "Primary_Support_Contact__c",
 	t.val39 "AddOn_Data__c",
 	t.val40 "Cluster_Name__c",
 	t.val41 "Is_CCU_Cluster__c",
 	t.val42 "LicensesDelimited__c",
 	TO_NUMBER(t.val43) "Total_CCU_s__c",
 	t.val44 "Cluster_Capacity__c",
 	t.val45 "isABLCluster__c",
 	t.val46 "Cluster_Type__c",
 	t.val47 "Break_Fix_Contact__c",
 	t.val48 "License_Class__c",
 	SUBSTR(CASE WHEN (t.val103 IS NULL) THEN 'Unknown' ELSE CASE WHEN ((NVL(t.val107, 'Fixed Asset'||'x')='Fixed Asset') OR (NVL(t.val107, 'Internal'||'x')='Internal') OR (NVL(t.val107, 'POC'||'x')='POC') OR (NVL(t.val107, 'Internal - Channel'||'x')='Internal - Channel')) THEN 'Under Support' ELSE CASE WHEN ((TO_DATE(t.val52)-DATE '2022-5-18')>=0) THEN 'Under Support' ELSE CASE WHEN (TO_DATE(t.val52) IS NULL) THEN 'No Support Contract' ELSE CASE WHEN ((DATE '2022-5-18'-TO_DATE(t.val52))<=45) THEN 'Expired (Grace Period)' ELSE 'EXPIRED' END END END END END, 0, 1300) "Contract_Status__c",
 	TO_DATE(t.val52) "Support_End_Date__c",
 	t.val53 "Support_Level__c",
 	t.val54 "supportDetailsUpdated__c",
 	t.val55 "AssetBatchExecuted__c",
 	t.val56 "AFS_Version_Pulse__c",
 	t.val57 "Buckets_version_Pulse__c",
 	t.val58 "Calm_version_Pulse__c",
 	t.val59 "Cluster_ID__c",
 	t.val60 "Foundation_Version_Pulse__c",
 	t.val61 "Hypervisor_Type__c",
 	t.val62 "Hypervisor_version__c",
 	t.val63 "Karbon_version_Pulse__c",
 	t.val64 "LCM_Version_Pulse__c",
 	TO_DATE(t.val65) "Last_Pulse4k__c",
 	t.val66 "Xray_Pulse__c",
 	TO_DATE(t.val67) "Last_PulseHD__c",
 	t.val68 "Xtract_Pulse__c",
 	TO_DATE(t.val69) "Last_Pulse__c",
 	t.val70 "additional_data__c",
 	t.val71 "NCC_Version_Pulse__c",
 	t.val72 "Nutanix_core_version__c",
 	t.val73 "PC_Version_Pulse__c",
 	t.val74 "Usage_Restricted_to__c",
 	t.val75 "PC_UUID__c",
 	t.val76 "Break_Fix_Do_Not_Remind__c",
 	TO_DATE(t.val77) "ColAlias3",
 	t.val78 "Cluster_category__c",
 	t.val79 "Number_of_Flow_Policies__c",
 	TO_NUMBER(t.val80) "Number_of_CBL_Nodes__c",
 	t.val81 "Era_Version_Pulse__c",
 	t.val82 "ColAlias4",
 	t.val83 "Consumption_Model__c",
 	t.val84 "Tenant_UUID__c",
 	t.val85 "License_Key__c",
 	t.val86 "Tag__c",
 	t.val87 "Acknowledge_by__c",
 	TO_DATE(t.val88) "Acknowledge_date__c",
 	t.val89 "Install_Address_Nickname__c",
 	t.val90 "Part_Address_Nickname__c",
 	t.val92 "Subscription__c",
 	t.val93 "Cloud_Provider__c",
 	t.val94 "Cluster_list__c",
 	t.val95 "Licensed_By_Email__c",
 	t.val96 "Pulse_Declined_Comments__c",
 	TO_DATE(t.val97) "Pulse_Declined_Date__c",
 	t.val98 "Pulse_Declined_Reason__c",
 	t.val99 "Pulse_Declined__c",
 	t.val100 "ASP_Account__c",
 	t.val101 "Account_Name__c",
 	t.val102 "Cluster_Status__c",
 	t.val103 "Contract_Coverage__c",
 	t.val104 "ColAlias5",
 	t.val105 "Evaluate_Contract__c",
 	t.val107 "Order_type_Text__c",
 	t.val108 "Renewal_Requested__c",
 	TO_DATE(t.val109) "Request_DateTime__c",
 	t.val110 "Requester_Email__c",
 	t.val111 "ClusterUUID__c",
 	TO_DATE(t.val112) "ParseAPIJSONResponseTime__c",
 	t.val113 "ParseAPIJSONResponse__c",
 	t.val114 "Is_POC_Cluster__c",
 	SUBSTR(CASE WHEN ((TRUNC(TO_DATE(t.val65) + (-8/24.0))>=(TRUNC(SYSDATE + (-8/24.0))-TRUNC(7))) AND (NOT (TO_DATE(t.val65) IS NULL))) THEN '_HL_ENCODED_' || NVL('https://portal.nutanix.com/portal_redirect?accountid=' || CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END||CASE WHEN LENGTH(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END) = 15 THEN SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,5,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,4,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,3,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,2,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,1,1)),96),64,1,0)+1,1)||SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,10,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,9,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,8,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,7,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,6,1)),96),64,1,0)+1,1)||SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,15,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,14,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,13,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,12,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,11,1)),96),64,1,0)+1,1) ELSE NULL END || '&page=%2Fpage%2Fassets%2Fcluster%2Fsummary%3Forigin%3Dsfdc_redirect%26cluster_uuid%3D' || t.val111 || '%26cluster_name%3D' || t.val40 || '2%26timelineDate%3D' || (TO_CHAR(DATE '2022-5-18', 'YYYY-MM-DD')), ' ') || '_HL_' || NVL('Please click here', ' ') || '_HL_' || NVL('NEW', ' ') || '_HL_' ELSE 'PulseHD not available' END, 0, 1300) "Hardware_Timeline__c",
 	CASE WHEN ((((NOT (t.name IS NULL)) AND (TRUNC(TO_DATE(t.val65) + (-8/24.0))>=(TRUNC(SYSDATE + (-8/24.0))-TRUNC(7))))) AND (NOT REGEXP_LIKE(REGEXP_REPLACE(SUBSTR(t.val71, GREATEST((NVL(INSTR(t.val71, '.'), 0)+1), 1), GREATEST(((NVL(INSTR(REGEXP_SUBSTR(t.val71,'.{0,'||NVL((NVL(LENGTH(t.val71),0)-NVL(INSTR(t.val71, '.'), 0)),0)||'}$',1,1,'n'), '.'), 0)-1)+NVL(INSTR(t.val71, '.'), 0)), 0)),'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$') OR ((TO_NUMBER(SUBSTR(t.val71, GREATEST((NVL(INSTR(t.val71, '.'), 0)+1), 1), GREATEST(((NVL(INSTR(REGEXP_SUBSTR(t.val71,'.{0,'||NVL((NVL(LENGTH(t.val71),0)-NVL(INSTR(t.val71, '.'), 0)),0)||'}$',1,1,'n'), '.'), 0)-1)+NVL(INSTR(t.val71, '.'), 0)), 0)))>=7) AND (NOT REGEXP_LIKE(REGEXP_REPLACE(SUBSTR(t.val71, 1, GREATEST(1, 0)),'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$'))) OR (NOT(((TO_NUMBER(SUBSTR(t.val71, GREATEST((NVL(INSTR(t.val71, '.'), 0)+1), 1), GREATEST(((NVL(INSTR(REGEXP_SUBSTR(t.val71,'.{0,'||NVL((NVL(LENGTH(t.val71),0)-NVL(INSTR(t.val71, '.'), 0)),0)||'}$',1,1,'n'), '.'), 0)-1)+NVL(INSTR(t.val71, '.'), 0)), 0)))>=7) AND (TO_NUMBER(SUBSTR(t.val71, 1, GREATEST(1, 0)))>=3))) AND (NOT REGEXP_LIKE(REGEXP_REPLACE(SUBSTR(t.val71, 1, GREATEST(1, 0)),'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$'))))) THEN NULL ELSE SUBSTR(CASE WHEN ((NOT (t.name IS NULL)) AND (TRUNC(TO_DATE(t.val65) + (-8/24.0))>=(TRUNC(SYSDATE + (-8/24.0))-TRUNC(7)))) THEN CASE WHEN (((TO_NUMBER(SUBSTR(t.val71, GREATEST((NVL(INSTR(t.val71, '.'), 0)+1), 1), GREATEST(((NVL(INSTR(REGEXP_SUBSTR(t.val71,'.{0,'||NVL((NVL(LENGTH(t.val71),0)-NVL(INSTR(t.val71, '.'), 0)),0)||'}$',1,1,'n'), '.'), 0)-1)+NVL(INSTR(t.val71, '.'), 0)), 0)))>=7) AND (TO_NUMBER(SUBSTR(t.val71, 1, GREATEST(1, 0)))>=3)) OR (((TO_NUMBER(SUBSTR(t.val71, 1, GREATEST(1, 0)))>=4) AND (NVL(t.val71, '3.7.0'||'x')<>'3.7.0')) AND (NVL(t.val71, '3.7.0.0'||'x')<>'3.7.0.0'))) THEN '_HL_ENCODED_' || NVL('https://portal.nutanix.com/portal_redirect?accountid=' || CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END||CASE WHEN LENGTH(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END) = 15 THEN SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,5,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,4,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,3,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,2,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,1,1)),96),64,1,0)+1,1)||SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,10,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,9,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,8,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,7,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,6,1)),96),64,1,0)+1,1)||SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,15,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,14,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,13,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,12,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,11,1)),96),64,1,0)+1,1) ELSE NULL END || '&page=/page/assets/cluster/diagnostics?cluster_uuid=' || t.name || '&cluster_name=' || t.val40, ' ') || '_HL_' || NVL('Please click here', ' ') || '_HL_' || '_blank' || '_HL_' ELSE 'NCC Version unsupported' END ELSE 'Pulse4k not available' END, 0, 1300) END "Insights_Remote_Collection__c",
 	t.val117 "Backup_ASP_Association__c",
 	t.custom_entity_data_id repl__0,
 	t.val104 repl__1,
 	t.val92 repl__2,
 	t.val53 repl__3
 	from (select * from table(cast(:1  as id_num_array))) ids,
 	core.custom_entity_data t
 	where (ids.id = t.custom_entity_data_id)
 	and (t.organization_id = '00D60000000IUGi')
 	and (t.custom_entity_data_id != '000000000000000')
 	and (t.key_prefix = :2 ))
 	where ("IsDeleted_gen_1" = '0')
 	order by "ids_num" asc nulls first) nest,
 	core.mru t_mru,
 	core.asset t_spn0,
 	core.custom_entity_data t_spn1,
 	core.asset_cfdata cft_spn0
 	where (repl__0 = t_mru.entity_id(+))
 	and (repl__1 = t_spn0.asset_id(+))
 	and (repl__2 = t_spn1.custom_entity_data_id(+))
 	and (t_spn0.asset_id = cft_spn0.asset_cfdata_id(+))
 	and (t_mru.organization_id(+) = '00D60000000IUGi')
 	and (t_mru.users_id(+) = :3 )
 	and (t_mru.network_id(+) = :4 )
 	and (t_mru.key_prefix(+) = :5 )
 	and (t_spn0.organization_id(+) = '00D60000000IUGi')
 	and (t_spn0.deleted(+) = '0')
 	and (t_spn1.organization_id(+) = '00D60000000IUGi')
 	and (t_spn1.deleted(+) = '0')
 	and (t_spn1.key_prefix(+) = :6 )
 	and (cft_spn0.organization_id(+) = '00D60000000IUGi')
 	order by nest."ids_num" asc nulls first, OriginalSql = select /*QueryMore*/ /*+ ordered use_nl(t_mru) index(t_mru PKMRU) use_nl(t_spn0) use_nl(t_spn1) use_nl(cft_spn0) */
 	nest."Id",
 	nest."OwnerId",
 	nest."IsDeleted",
 	nest."Name",
 	nest."CurrencyIsoCode",
 	nest."CreatedDate",
 	nest."CreatedById",
 	nest."LastModifiedDate",
 	nest."LastModifiedById",
 	nest."SystemModstamp",
 	nest."LastActivityDate",
 	t_mru.last_view_date "LastViewedDate",
 	t_mru.entry_date "LastReferencedDate",
 	nest."Account__c",
 	nest."Active_Cluster_Id_File__c",
 	nest."Active_License_File__c",
 	nest."Cluster_Key__c",
 	nest."Cluster_License_Type__c",
 	nest."Cluster_Logical_Timestamp__c",
 	nest."Expiry_Date__c",
 	nest."License_Logical_Timestamp__c",
 	nest."Number_of_Nodes__c",
 	nest."CVM_Memory_Configured__c",
 	nest."ColAlias1",
 	nest."Current_License_Key_File__c",
 	nest."isExpired__c",
 	nest."Inst_Addr_Attention__c",
 	nest."Inst_Addr_City__c",
 	nest."Inst_Addr_Country__c",
 	nest."Inst_Addr_Line_1__c",
 	nest."Inst_Addr_Line_2__c",
 	nest."Inst_Addr_State__c",
 	nest."Inst_Addr_Zip__c",
 	nest."Installation_Address__c",
 	nest."t.ID",
 	nest."Is_Installation_Address_Set__c",
 	nest."Parts_Addr_Attention__c",
 	nest."Parts_Addr_City__c",
 	nest."Parts_Addr_Country__c",
 	nest."Parts_Addr_Line_1__c",
 	nest."Parts_Addr_Line_2__c",
 	nest."Parts_Addr_State__c",
 	nest."Parts_Addr_Zip__c",
 	nest."instaddr__c",
 	nest."Is_Support_Contact_Set__c",
 	nest."AssetExists__c",
 	nest."Last_Modified_By_Contact__c",
 	nest."ColAlias2",
 	nest."NumberOfAssets__c",
 	nest."On_Field_Engineer__c",
 	nest."Site_Specific_Information__c",
 	nest."UpdateAssetAddress__c",
 	nest."Primary_Support_Contact__c",
 	nest."AddOn_Data__c",
 	nest."Cluster_Name__c",
 	nest."Is_CCU_Cluster__c",
 	nest."LicensesDelimited__c",
 	nest."Total_CCU_s__c",
 	nest."Cluster_Capacity__c",
 	nest."isABLCluster__c",
 	nest."Cluster_Type__c",
 	nest."Break_Fix_Contact__c",
 	nest."License_Class__c",
 	nest."Contract_Status__c",
 	SUBSTR(cft_spn0.val4, 0, 1300) "Order_type__c",
 	CASE WHEN (TRANSLATE(repl__3,'X0123456789','X') IS NOT NULL) THEN NULL ELSE SUBSTR(CASE  WHEN (repl__3 IS NOT NULL AND repl__3 = '1') THEN 'Basic' WHEN (repl__3 IS NOT NULL AND repl__3 = '12') THEN 'Basic' WHEN (repl__3 IS NOT NULL AND repl__3 = '2') THEN 'Production' WHEN (repl__3 IS NOT NULL AND repl__3 = '11') THEN 'Production' WHEN (repl__3 IS NOT NULL AND repl__3 = '3') THEN 'Mission Critical' WHEN (repl__3 IS NOT NULL AND repl__3 = '4') THEN 'ASP' WHEN (1=0) THEN 'ASP' WHEN (1=0) THEN 'ASP' WHEN (1=0) THEN 'ASP' WHEN (repl__3 IS NOT NULL AND repl__3 = '9') THEN 'OEM' WHEN (repl__3 IS NOT NULL AND repl__3 = '15') THEN 'OEM' WHEN (repl__3 IS NOT NULL AND repl__3 = '10') THEN 'Mission Critical' ELSE (SELECT /*+ index(pick akpicklist_master) */ /* space for more   */ api_name FROM core.picklist_master pick WHERE organization_id = '00D60000000IUGi' AND picklist_enum_or_id = '00N0e000003GHrT' AND int_value = repl__3) END, 0, 1300) END "Support_Contract_Type__c",
 	nest."Support_End_Date__c",
 	nest."Support_Level__c",
 	nest."supportDetailsUpdated__c",
 	nest."AssetBatchExecuted__c",
 	nest."AFS_Version_Pulse__c",
 	nest."Buckets_version_Pulse__c",
 	nest."Calm_version_Pulse__c",
 	nest."Cluster_ID__c",
 	nest."Foundation_Version_Pulse__c",
 	nest."Hypervisor_Type__c",
 	nest."Hypervisor_version__c",
 	nest."Karbon_version_Pulse__c",
 	nest."LCM_Version_Pulse__c",
 	nest."Last_Pulse4k__c",
 	nest."Xray_Pulse__c",
 	nest."Last_PulseHD__c",
 	nest."Xtract_Pulse__c",
 	nest."Last_Pulse__c",
 	nest."additional_data__c",
 	nest."NCC_Version_Pulse__c",
 	nest."Nutanix_core_version__c",
 	nest."PC_Version_Pulse__c",
 	nest."Usage_Restricted_to__c",
 	nest."PC_UUID__c",
 	nest."Break_Fix_Do_Not_Remind__c",
 	nest."ColAlias3",
 	nest."Cluster_category__c",
 	nest."Number_of_Flow_Policies__c",
 	nest."Number_of_CBL_Nodes__c",
 	nest."Era_Version_Pulse__c",
 	nest."ColAlias4",
 	nest."Consumption_Model__c",
 	nest."Tenant_UUID__c",
 	nest."License_Key__c",
 	nest."Tag__c",
 	nest."Acknowledge_by__c",
 	nest."Acknowledge_date__c",
 	nest."Install_Address_Nickname__c",
 	nest."Part_Address_Nickname__c",
 	SUBSTR(CASE WHEN (CASE WHEN repl__2 = '000000000000000' THEN NULL ELSE repl__2 END IS NULL) THEN 'Free Trail' ELSE CASE WHEN (NVL(t_spn1.val24, 'Active'||'x')='Active') THEN 'Paid - Active' ELSE 'Paid - Canceled' END END, 0, 1300) "Subscription_Status__c",
 	nest."Subscription__c",
 	nest."Cloud_Provider__c",
 	nest."Cluster_list__c",
 	nest."Licensed_By_Email__c",
 	nest."Pulse_Declined_Comments__c",
 	nest."Pulse_Declined_Date__c",
 	nest."Pulse_Declined_Reason__c",
 	nest."Pulse_Declined__c",
 	nest."ASP_Account__c",
 	nest."Account_Name__c",
 	nest."Cluster_Status__c",
 	nest."Contract_Coverage__c",
 	nest."ColAlias5",
 	nest."Evaluate_Contract__c",
 	CASE WHEN (TRANSLATE(cft_spn0.val12,'X0123456789','X') IS NOT NULL) THEN NULL ELSE SUBSTR((SELECT /*+ index(pick akpicklist_master) */ /* space for more   */ api_name FROM core.picklist_master pick WHERE organization_id = '00D60000000IUGi' AND picklist_enum_or_id = '00N60000002Jcm3' AND int_value = cft_spn0.val12), 0, 1300) END "L1_L2_Tech_Support_Provider__c",
 	nest."Order_type_Text__c",
 	nest."Renewal_Requested__c",
 	nest."Request_DateTime__c",
 	nest."Requester_Email__c",
 	nest."ClusterUUID__c",
 	nest."ParseAPIJSONResponseTime__c",
 	nest."ParseAPIJSONResponse__c",
 	nest."Is_POC_Cluster__c",
 	nest."Hardware_Timeline__c",
 	nest."Insights_Remote_Collection__c",
 	nest."Backup_ASP_Association__c"
 	from (select *
 	from (select /*+ ordered use_nl(t) index(t pkcustom_entity_data) */
 	t.deleted "IsDeleted_gen_1",
 	ids.num "ids_num",
 	t.custom_entity_data_id "Id",
 	t.owner "OwnerId",
 	t.deleted "IsDeleted",
 	t.name "Name",
 	DECODE(t.currency_iso_code, '000', 'USD', t.currency_iso_code) "CurrencyIsoCode",
 	t.created_date "CreatedDate",
 	t.created_by "CreatedById",
 	t.last_update "LastModifiedDate",
 	t.last_update_by "LastModifiedById",
 	t.system_modstamp "SystemModstamp",
 	t.last_activity "LastActivityDate",
 	t.val0 "Account__c",
 	t.val1 "Active_Cluster_Id_File__c",
 	t.val2 "Active_License_File__c",
 	t.val3 "Cluster_Key__c",
 	t.val4 "Cluster_License_Type__c",
 	TO_NUMBER(t.val5) "Cluster_Logical_Timestamp__c",
 	TO_DATE(t.val6) "Expiry_Date__c",
 	TO_NUMBER(t.val7) "License_Logical_Timestamp__c",
 	TO_NUMBER(t.val8) "Number_of_Nodes__c",
 	TO_NUMBER(t.val9) "CVM_Memory_Configured__c",
 	t.val10 "ColAlias1",
 	t.val11 "Current_License_Key_File__c",
 	CASE WHEN ((TO_DATE(t.val6)<=DATE '2022-5-18') AND (NOT (TO_DATE(t.val6) IS NULL))) THEN '1' ELSE '0' END "isExpired__c",
 	t.val13 "Inst_Addr_Attention__c",
 	t.val14 "Inst_Addr_City__c",
 	t.val15 "Inst_Addr_Country__c",
 	t.val16 "Inst_Addr_Line_1__c",
 	t.val17 "Inst_Addr_Line_2__c",
 	t.val18 "Inst_Addr_State__c",
 	t.val19 "Inst_Addr_Zip__c",
 	t.val20 "Installation_Address__c",
 	t.custom_entity_data_id "t.ID",
 	t.val21 "Is_Installation_Address_Set__c",
 	t.val22 "Parts_Addr_Attention__c",
 	t.val23 "Parts_Addr_City__c",
 	t.val24 "Parts_Addr_Country__c",
 	t.val25 "Parts_Addr_Line_1__c",
 	t.val26 "Parts_Addr_Line_2__c",
 	t.val27 "Parts_Addr_State__c",
 	t.val28 "Parts_Addr_Zip__c",
 	t.val29 "instaddr__c",
 	TO_NUMBER(t.val30) "Is_Support_Contact_Set__c",
 	CASE WHEN (CASE WHEN ((NOT (TO_NUMBER(t.val34) IS NULL)) AND (TO_NUMBER(t.val34)>0)) THEN 1 ELSE 0 END) = 1 THEN '1' ELSE '0' END "AssetExists__c",
 	t.val32 "Last_Modified_By_Contact__c",
 	TO_DATE(t.val33) "ColAlias2",
 	TO_NUMBER(t.val34) "NumberOfAssets__c",
 	t.val35 "On_Field_Engineer__c",
 	t.val36 "Site_Specific_Information__c",
 	t.val37 "UpdateAssetAddress__c",
 	t.val38 "Primary_Support_Contact__c",
 	t.val39 "AddOn_Data__c",
 	t.val40 "Cluster_Name__c",
 	t.val41 "Is_CCU_Cluster__c",
 	t.val42 "LicensesDelimited__c",
 	TO_NUMBER(t.val43) "Total_CCU_s__c",
 	t.val44 "Cluster_Capacity__c",
 	t.val45 "isABLCluster__c",
 	t.val46 "Cluster_Type__c",
 	t.val47 "Break_Fix_Contact__c",
 	t.val48 "License_Class__c",
 	SUBSTR(CASE WHEN (t.val103 IS NULL) THEN 'Unknown' ELSE CASE WHEN ((NVL(t.val107, 'Fixed Asset'||'x')='Fixed Asset') OR (NVL(t.val107, 'Internal'||'x')='Internal') OR (NVL(t.val107, 'POC'||'x')='POC') OR (NVL(t.val107, 'Internal - Channel'||'x')='Internal - Channel')) THEN 'Under Support' ELSE CASE WHEN ((TO_DATE(t.val52)-DATE '2022-5-18')>=0) THEN 'Under Support' ELSE CASE WHEN (TO_DATE(t.val52) IS NULL) THEN 'No Support Contract' ELSE CASE WHEN ((DATE '2022-5-18'-TO_DATE(t.val52))<=45) THEN 'Expired (Grace Period)' ELSE 'EXPIRED' END END END END END, 0, 1300) "Contract_Status__c",
 	TO_DATE(t.val52) "Support_End_Date__c",
 	t.val53 "Support_Level__c",
 	t.val54 "supportDetailsUpdated__c",
 	t.val55 "AssetBatchExecuted__c",
 	t.val56 "AFS_Version_Pulse__c",
 	t.val57 "Buckets_version_Pulse__c",
 	t.val58 "Calm_version_Pulse__c",
 	t.val59 "Cluster_ID__c",
 	t.val60 "Foundation_Version_Pulse__c",
 	t.val61 "Hypervisor_Type__c",
 	t.val62 "Hypervisor_version__c",
 	t.val63 "Karbon_version_Pulse__c",
 	t.val64 "LCM_Version_Pulse__c",
 	TO_DATE(t.val65) "Last_Pulse4k__c",
 	t.val66 "Xray_Pulse__c",
 	TO_DATE(t.val67) "Last_PulseHD__c",
 	t.val68 "Xtract_Pulse__c",
 	TO_DATE(t.val69) "Last_Pulse__c",
 	t.val70 "additional_data__c",
 	t.val71 "NCC_Version_Pulse__c",
 	t.val72 "Nutanix_core_version__c",
 	t.val73 "PC_Version_Pulse__c",
 	t.val74 "Usage_Restricted_to__c",
 	t.val75 "PC_UUID__c",
 	t.val76 "Break_Fix_Do_Not_Remind__c",
 	TO_DATE(t.val77) "ColAlias3",
 	t.val78 "Cluster_category__c",
 	t.val79 "Number_of_Flow_Policies__c",
 	TO_NUMBER(t.val80) "Number_of_CBL_Nodes__c",
 	t.val81 "Era_Version_Pulse__c",
 	t.val82 "ColAlias4",
 	t.val83 "Consumption_Model__c",
 	t.val84 "Tenant_UUID__c",
 	t.val85 "License_Key__c",
 	t.val86 "Tag__c",
 	t.val87 "Acknowledge_by__c",
 	TO_DATE(t.val88) "Acknowledge_date__c",
 	t.val89 "Install_Address_Nickname__c",
 	t.val90 "Part_Address_Nickname__c",
 	t.val92 "Subscription__c",
 	t.val93 "Cloud_Provider__c",
 	t.val94 "Cluster_list__c",
 	t.val95 "Licensed_By_Email__c",
 	t.val96 "Pulse_Declined_Comments__c",
 	TO_DATE(t.val97) "Pulse_Declined_Date__c",
 	t.val98 "Pulse_Declined_Reason__c",
 	t.val99 "Pulse_Declined__c",
 	t.val100 "ASP_Account__c",
 	t.val101 "Account_Name__c",
 	t.val102 "Cluster_Status__c",
 	t.val103 "Contract_Coverage__c",
 	t.val104 "ColAlias5",
 	t.val105 "Evaluate_Contract__c",
 	t.val107 "Order_type_Text__c",
 	t.val108 "Renewal_Requested__c",
 	TO_DATE(t.val109) "Request_DateTime__c",
 	t.val110 "Requester_Email__c",
 	t.val111 "ClusterUUID__c",
 	TO_DATE(t.val112) "ParseAPIJSONResponseTime__c",
 	t.val113 "ParseAPIJSONResponse__c",
 	t.val114 "Is_POC_Cluster__c",
 	SUBSTR(CASE WHEN ((TRUNC(TO_DATE(t.val65) + (-8/24.0))>=(TRUNC(SYSDATE + (-8/24.0))-TRUNC(7))) AND (NOT (TO_DATE(t.val65) IS NULL))) THEN '_HL_ENCODED_' || NVL('https://portal.nutanix.com/portal_redirect?accountid=' || CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END||CASE WHEN LENGTH(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END) = 15 THEN SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,5,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,4,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,3,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,2,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,1,1)),96),64,1,0)+1,1)||SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,10,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,9,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,8,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,7,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,6,1)),96),64,1,0)+1,1)||SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,15,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,14,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,13,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,12,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,11,1)),96),64,1,0)+1,1) ELSE NULL END || '&page=%2Fpage%2Fassets%2Fcluster%2Fsummary%3Forigin%3Dsfdc_redirect%26cluster_uuid%3D' || t.val111 || '%26cluster_name%3D' || t.val40 || '2%26timelineDate%3D' || (TO_CHAR(DATE '2022-5-18', 'YYYY-MM-DD')), ' ') || '_HL_' || NVL('Please click here', ' ') || '_HL_' || NVL('NEW', ' ') || '_HL_' ELSE 'PulseHD not available' END, 0, 1300) "Hardware_Timeline__c",
 	CASE WHEN ((((NOT (t.name IS NULL)) AND (TRUNC(TO_DATE(t.val65) + (-8/24.0))>=(TRUNC(SYSDATE + (-8/24.0))-TRUNC(7))))) AND (NOT REGEXP_LIKE(REGEXP_REPLACE(SUBSTR(t.val71, GREATEST((NVL(INSTR(t.val71, '.'), 0)+1), 1), GREATEST(((NVL(INSTR(REGEXP_SUBSTR(t.val71,'.{0,'||NVL((NVL(LENGTH(t.val71),0)-NVL(INSTR(t.val71, '.'), 0)),0)||'}$',1,1,'n'), '.'), 0)-1)+NVL(INSTR(t.val71, '.'), 0)), 0)),'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$') OR ((TO_NUMBER(SUBSTR(t.val71, GREATEST((NVL(INSTR(t.val71, '.'), 0)+1), 1), GREATEST(((NVL(INSTR(REGEXP_SUBSTR(t.val71,'.{0,'||NVL((NVL(LENGTH(t.val71),0)-NVL(INSTR(t.val71, '.'), 0)),0)||'}$',1,1,'n'), '.'), 0)-1)+NVL(INSTR(t.val71, '.'), 0)), 0)))>=7) AND (NOT REGEXP_LIKE(REGEXP_REPLACE(SUBSTR(t.val71, 1, GREATEST(1, 0)),'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$'))) OR (NOT(((TO_NUMBER(SUBSTR(t.val71, GREATEST((NVL(INSTR(t.val71, '.'), 0)+1), 1), GREATEST(((NVL(INSTR(REGEXP_SUBSTR(t.val71,'.{0,'||NVL((NVL(LENGTH(t.val71),0)-NVL(INSTR(t.val71, '.'), 0)),0)||'}$',1,1,'n'), '.'), 0)-1)+NVL(INSTR(t.val71, '.'), 0)), 0)))>=7) AND (TO_NUMBER(SUBSTR(t.val71, 1, GREATEST(1, 0)))>=3))) AND (NOT REGEXP_LIKE(REGEXP_REPLACE(SUBSTR(t.val71, 1, GREATEST(1, 0)),'[0-9]+','0'),'^[+-]?(0|0\.|\.0|0\.0)([Ee][+-]?0)?$'))))) THEN NULL ELSE SUBSTR(CASE WHEN ((NOT (t.name IS NULL)) AND (TRUNC(TO_DATE(t.val65) + (-8/24.0))>=(TRUNC(SYSDATE + (-8/24.0))-TRUNC(7)))) THEN CASE WHEN (((TO_NUMBER(SUBSTR(t.val71, GREATEST((NVL(INSTR(t.val71, '.'), 0)+1), 1), GREATEST(((NVL(INSTR(REGEXP_SUBSTR(t.val71,'.{0,'||NVL((NVL(LENGTH(t.val71),0)-NVL(INSTR(t.val71, '.'), 0)),0)||'}$',1,1,'n'), '.'), 0)-1)+NVL(INSTR(t.val71, '.'), 0)), 0)))>=7) AND (TO_NUMBER(SUBSTR(t.val71, 1, GREATEST(1, 0)))>=3)) OR (((TO_NUMBER(SUBSTR(t.val71, 1, GREATEST(1, 0)))>=4) AND (NVL(t.val71, '3.7.0'||'x')<>'3.7.0')) AND (NVL(t.val71, '3.7.0.0'||'x')<>'3.7.0.0'))) THEN '_HL_ENCODED_' || NVL('https://portal.nutanix.com/portal_redirect?accountid=' || CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END||CASE WHEN LENGTH(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END) = 15 THEN SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,5,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,4,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,3,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,2,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,1,1)),96),64,1,0)+1,1)||SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,10,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,9,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,8,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,7,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,6,1)),96),64,1,0)+1,1)||SUBSTR('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456',DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,15,1)),96),64,16,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,14,1)),96),64,8,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,13,1)),96),64,4,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,12,1)),96),64,2,0)+DECODE(BITAND(ASCII(SUBSTR(CASE WHEN t.val0 = '000000000000000' THEN NULL ELSE t.val0 END,11,1)),96),64,1,0)+1,1) ELSE NULL END || '&page=/page/assets/cluster/diagnostics?cluster_uuid=' || t.name || '&cluster_name=' || t.val40, ' ') || '_HL_' || NVL('Please click here', ' ') || '_HL_' || '_blank' || '_HL_' ELSE 'NCC Version unsupported' END ELSE 'Pulse4k not available' END, 0, 1300) END "Insights_Remote_Collection__c",
 	t.val117 "Backup_ASP_Association__c",
 	t.custom_entity_data_id repl__0,
 	t.val104 repl__1,
 	t.val92 repl__2,
 	t.val53 repl__3
 	from (select * from table(cast(? as id_num_array))) ids,
 	core.custom_entity_data t
 	where (ids.id = t.custom_entity_data_id)
 	and (t.organization_id = '00D60000000IUGi')
 	and (t.custom_entity_data_id != '000000000000000')
 	and (t.key_prefix = ?))
 	where ("IsDeleted_gen_1" = '0')
 	order by "ids_num" asc nulls first) nest,
 	core.mru t_mru,
 	core.asset t_spn0,
 	core.custom_entity_data t_spn1,
 	core.asset_cfdata cft_spn0
 	where (repl__0 = t_mru.entity_id(+))
 	and (repl__1 = t_spn0.asset_id(+))
 	and (repl__2 = t_spn1.custom_entity_data_id(+))
 	and (t_spn0.asset_id = cft_spn0.asset_cfdata_id(+))
 	and (t_mru.organization_id(+) = '00D60000000IUGi')
 	and (t_mru.users_id(+) = ?)
 	and (t_mru.network_id(+) = ?)
 	and (t_mru.key_prefix(+) = ?)
 	and (t_spn0.organization_id(+) = '00D60000000IUGi')
 	and (t_spn0.deleted(+) = '0')
 	and (t_spn1.organization_id(+) = '00D60000000IUGi')
 	and (t_spn1.deleted(+) = '0')
 	and (t_spn1.key_prefix(+) = ?)
 	and (cft_spn0.organization_id(+) = '00D60000000IUGi')
 	order by nest."ids_num" asc nulls first